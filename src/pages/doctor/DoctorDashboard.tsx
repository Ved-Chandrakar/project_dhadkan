import { useState } from 'react'
import { User } from '../../App'
import AddReportForm from '../../components/AddReportForm'
import DoctorProfile from '../../components/DoctorProfile'
import './DoctorDashboard.css'

interface DoctorDashboardProps {
  user: User
  onLogout: () => void
  activeTab?: string
}

interface MenuItem {
  id: string
  label: string
  icon: string
}

interface DashboardStats {
  todayScreenings: number
  totalChildrenScreened: number
  positiveCases: number
}

const DoctorDashboard = ({ user, onLogout, activeTab: initialActiveTab }: DoctorDashboardProps) => {
  const [activeTab, setActiveTab] = useState(initialActiveTab || 'dashboard')

  const menuItems: MenuItem[] = [
    { id: 'dashboard', label: '‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°', icon: 'üìä' },
    { id: 'addReport', label: '‡§®‡§à ‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü', icon: 'üìù' },
    { id: 'profile', label: '‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤', icon: 'üë§' }
  ]

  const mockStats: DashboardStats = {
    todayScreenings: 8,
    totalChildrenScreened: 156,
    positiveCases: 12
  }

  // Mock children data based on schema for logged-in doctor
  const childrenList = [
    {
      id: 1,
      name: '‡§∞‡§æ‡§π‡•Å‡§≤ ‡§ï‡•Å‡§Æ‡§æ‡§∞',
      age: 8,
      gender: '‡§™‡•Å‡§∞‡•Å‡§∑' as const,
      fatherName: '‡§∞‡§Æ‡•á‡§∂ ‡§ï‡•Å‡§Æ‡§æ‡§∞',
      mobileNo: '9876543210',
      schoolName: '‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï ‡§µ‡§ø‡§¶‡•ç‡§Ø‡§æ‡§≤‡§Ø',
      heartStatus: '‡§∏‡§Ç‡§¶‡•á‡§π ‡§®‡§π‡•Ä‡§Ç' as const,
      createdat: '2024-01-15T10:30:00Z'
    },
    {
      id: 2,
      name: '‡§™‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§∂‡§∞‡•ç‡§Æ‡§æ',
      age: 7,
      gender: '‡§Æ‡§π‡§ø‡§≤‡§æ' as const,
      fatherName: '‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§∂‡§∞‡•ç‡§Æ‡§æ',
      mobileNo: '9876543211',
      schoolName: '‡§ó‡§µ‡§∞‡•ç‡§®‡§Æ‡•á‡§Ç‡§ü ‡§∏‡•ç‡§ï‡•Ç‡§≤',
      heartStatus: '‡§∏‡§Ç‡§¶‡§ø‡§ó‡•ç‡§ß' as const,
      createdat: '2024-01-14T14:20:00Z'
    },
    {
      id: 3,
      name: '‡§Ö‡§Æ‡§ø‡§§ ‡§µ‡§∞‡•ç‡§Æ‡§æ',
      age: 9,
      gender: '‡§™‡•Å‡§∞‡•Å‡§∑' as const,
      fatherName: '‡§∏‡•Å‡§®‡•Ä‡§≤ ‡§µ‡§∞‡•ç‡§Æ‡§æ',
      mobileNo: '9876543212',
      schoolName: '‡§™‡§¨‡•ç‡§≤‡§ø‡§ï ‡§∏‡•ç‡§ï‡•Ç‡§≤',
      heartStatus: '‡§∏‡§Ç‡§¶‡•á‡§π ‡§®‡§π‡•Ä‡§Ç' as const,
      createdat: '2024-01-13T16:45:00Z'
    },
    {
      id: 4,
      name: '‡§ï‡§æ‡§ú‡§≤ ‡§∏‡§ø‡§Ç‡§π',
      age: 6,
      gender: '‡§Æ‡§π‡§ø‡§≤‡§æ' as const,
      fatherName: '‡§∞‡§æ‡§ú‡•á‡§∂ ‡§∏‡§ø‡§Ç‡§π',
      mobileNo: '9876543213',
      schoolName: '‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§µ‡§ø‡§¶‡•ç‡§Ø‡§æ‡§≤‡§Ø',
      heartStatus: '‡§∏‡§Ç‡§¶‡§ø‡§ó‡•ç‡§ß' as const,
      createdat: '2024-01-12T11:15:00Z'
    }
  ]

  const renderDashboard = () => (
    <div>
      <div className="content-header">
        <h3>‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§° ‡§Ö‡§µ‡§≤‡•ã‡§ï‡§®</h3>
        <p>‡§¨‡§ö‡•ç‡§ö‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ú‡§æ‡§Ç‡§ö ‡§∏‡•á‡§µ‡§æ</p>
      </div>
      
      <div className="stats-grid">
        <div className="stat-card">
          <h4>‡§ï‡•Å‡§≤ ‡§ú‡§æ‡§Ç‡§ö ‡§ï‡§ø‡§è ‡§ó‡§è ‡§¨‡§ö‡•ç‡§ö‡•á</h4>
          <p className="stat-number">{mockStats.totalChildrenScreened}</p>
          <span className="stat-icon">üë∂</span>
        </div>
        <div className="stat-card">
          <h4>‡§∏‡§Ç‡§¶‡§ø‡§ó‡•ç‡§ß ‡§Æ‡§æ‡§Æ‡§≤‡•á</h4>
          <p className="stat-number">{mockStats.positiveCases}</p>
          <span className="stat-icon">‚ö†Ô∏è</span>
        </div>
        <div className="stat-card">
          <h4>‡§Ü‡§ú ‡§ï‡•Ä ‡§ú‡§æ‡§Ç‡§ö</h4>
          <p className="stat-number">{mockStats.todayScreenings}</p>
          <span className="stat-icon">üìÖ</span>
        </div>
      </div>

      <div className="overview-grid">
        <div className="overview-card">
          <h4>‡§á‡§≤‡§æ‡§ú ‡§ï‡§ø‡§è ‡§ó‡§è ‡§¨‡§ö‡•ç‡§ö‡•á</h4>
          <div className="children-table-container">
            <table className="children-table">
              <thead>
                <tr>
                  <th>‡§ï‡•ç‡§∞‡§Æ</th>
                  <th>‡§®‡§æ‡§Æ</th>
                  <th>‡§â‡§Æ‡•ç‡§∞</th>
                  <th>‡§≤‡§ø‡§Ç‡§ó</th>
                  <th>‡§™‡§ø‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ</th>
                  <th>‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤</th>
                  <th>‡§∏‡•ç‡§ï‡•Ç‡§≤</th>
                  <th>‡§π‡•É‡§¶‡§Ø ‡§∏‡•ç‡§•‡§ø‡§§‡§ø</th>
                  <th>‡§ú‡§æ‡§Ç‡§ö ‡§§‡§ø‡§•‡§ø</th>
                </tr>
              </thead>
              <tbody>
                {childrenList.map((child, index) => (
                  <tr key={child.id}>
                    <td>{index + 1}</td>
                    <td className="child-name-cell">{child.name}</td>
                    <td>{child.age} ‡§µ‡§∞‡•ç‡§∑</td>
                    <td>{child.gender}</td>
                    <td>{child.fatherName}</td>
                    <td>{child.mobileNo}</td>
                    <td>{child.schoolName}</td>
                    <td>
                      <span className={`status-badge ${child.heartStatus === '‡§∏‡§Ç‡§¶‡§ø‡§ó‡•ç‡§ß' ? 'status-unhealthy' : 'status-healthy'}`}>
                        {child.heartStatus}
                      </span>
                    </td>
                    <td>{new Date(child.createdat).toLocaleDateString('hi-IN')}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  )

  const renderContent = () => {
    switch (activeTab) {
      case 'dashboard':
        return renderDashboard()
      case 'addReport':
        return <AddReportForm user={user} onBack={() => setActiveTab('dashboard')} />
      case 'profile':
        return <DoctorProfile user={user} onBack={() => setActiveTab('dashboard')} />
      default:
        return renderDashboard()
    }
  }

  return (
    <div className="dashboard">
      {/* Sidebar */}
      <div className="sidebar doctor-sidebar">
        <div className="sidebar-header">
          <h2>‡§ß‡§°‡§º‡§ï‡§®</h2>
          <p>‡§ö‡§ø‡§ï‡§ø‡§§‡•ç‡§∏‡§ï ‡§™‡•à‡§®‡§≤</p>
        </div>
        
        <nav>
          <ul className="sidebar-nav">
            {menuItems.map(item => (
              <li key={item.id}>
                <a
                  href="#"
                  className={activeTab === item.id ? 'active' : ''}
                  onClick={(e) => {
                    e.preventDefault()
                    setActiveTab(item.id)
                  }}
                >
                  <span className="nav-icon">{item.icon}</span>
                  {item.label}
                </a>
              </li>
            ))}
          </ul>
        </nav>

        <div className="sidebar-footer">
          <div className="user-profile">
            <p className="user-name">üë©‚Äç‚öïÔ∏è {user.name}</p>
            <p className="user-email">{user.email}</p>
          </div>
          <button onClick={onLogout} className="logout-btn">
            ‡§≤‡•â‡§ó‡§Ü‡§â‡§ü
          </button>
        </div>
      </div>

      {/* Main Content */}
      <div className="main-content">
        <header className="main-header">
          <h1>‡§ö‡§ø‡§ï‡§ø‡§§‡•ç‡§∏‡§ï ‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°</h1>
          <p>‡§¨‡§ö‡•ç‡§ö‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ú‡§æ‡§Ç‡§ö ‡§î‡§∞ ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤</p>
        </header>

        <div className="content-area">
          {renderContent()}
        </div>
      </div>
    </div>
  )
}

export default DoctorDashboard
